---
 - name: Provision EC2 Box
   local_action:
     module: ec2
     key_name: "{{ ec2_keypair }}"
     group_id: "{{ ec2_security_group }}"
     instance_type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
     region: "{{ ec2_region }}"
     instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}","Environment":"{{ec2_tag_Environment}}"}'
     assign_public_ip: yes
     wait: true
     count: {{ ec2_node_number }}
    #  instance_tags:
    #  role: cluster_node
    #  exact_count: "{{ ec2_node_number }}"
    #  count_tag: cluster_node
     volumes:
     - device_name: /dev/sda
       volume_type: gp2
       volume_size: "{{ ec2_root_disk_size }}"
       delete_on_termination: true
     - device_name: /dev/sdb
       volume_type: gp2
       volume_size: "{{ ec2_swap_size }}"
       delete_on_termination: true
   register: ec2

 - debug: var=item
   with_items: ec2.instances
# - set_fact: sn={{ ec2_count | int + 1 }}
 - add_host: name={{ item.public_ip }} >
             groups=tag_Type_{{ec2_tag_Type}},tag_Environment_{{ec2_tag_Environment}}
             ec2_region={{ec2_region}}
             ec2_tag_Name={{ec2_tag_Name}}
             # ec2_tag_Name={{ec2_tag_Name}}-{{sn}}
             ec2_tag_Type={{ec2_tag_Type}}
             ec2_tag_Environment={{ec2_tag_Environment}}
             ec2_ip_address={{item.public_ip}}
   with_items: ec2.instances

 - name: Wait for the instances to boot by checking the ssh port
   wait_for: host={{item.public_ip}} port=22 delay=60 timeout=320 state=started
   with_items: ec2.instances
