---
 - name: Provision EC2 Box with 1 master and 3 nodes
   local_action:
     module: ec2
     key_name: "{{ ec2_keypair }}"
     group_id: "{{ ec2_security_group }}"
     instance_type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
     region: "{{ ec2_region }}"
     instance_tags: '{"Name":"{{ec2_tag_Name}}-{{item}}","Type":"{{ec2_tag_Type}}","Environment":"{{ec2_tag_Environment}}"}'
     assign_public_ip: yes
     wait: yes
    #  count: "{{ ec2_node_number }}"
    #  instance_tags:
    #  role: cluster_node
    #  exact_count: "{{ ec2_node_number }}"
    #  count_tag: cluster_node
     volumes:
     - device_name: /dev/sda
       volume_type: gp2
       volume_size: "{{ ec2_root_disk_size }}"
       delete_on_termination: true
     - device_name: /dev/sdb
       volume_type: gp2
       volume_size: "{{ ec2_swap_size }}"
       delete_on_termination: true
   register: ec2
   with_sequence: count=3

 - debug: var=item
   with_items: ec2.instances

 # - debug: msg="Node {{ instance_tags }} goes to {{ group_id }}"
 #  #  when: instance_tags is defined
 #   with_items: ec2.instances
 #
 # # - name: Display all variables/facts known for a host
 # #   debug: var=hostvars[inventory_hostname] verbosity=4

 - name: Wait for the instances to boot by checking the ssh port
   wait_for: host={{item.public_ip}} port=22 delay=60 timeout=320 state=started
   with_items: ec2.instances
